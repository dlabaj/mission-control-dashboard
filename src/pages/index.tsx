import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { Octokit } from "octokit";
import { useEffect } from "react";

const octokit = new Octokit({
  auth: process.env.TOKEN,
});

interface Bump {
  name: string;
  number: number;
}

async function getRepos(rej: () => void) {
  const response = await octokit.request("GET /orgs/{owner}/repos", {
    owner: "patternfly-extension-testing",
  });

  if (response.status !== 200) {
    return rej();
  }

  const repos = response.data.filter((repo) => repo.name !== "dashboard");

  return repos;
}

async function getBumpPR(repo: string, rej: () => void): Promise<Bump> {
  const res = await octokit.request(
    "GET /repos/patternfly-extension-testing/{repo}/pulls",
    {
      repo,
    }
  );

  if (res.status !== 200) {
    rej();
  }

  const pulls = res.data;
  const bumpPull = pulls.find(
    (pull) => pull.title === "chore(deps): update patternfly"
  );

  return { name: repo, number: bumpPull.number };
}

async function getWorkflowResult(
  PRNumber: number,
  repo: string,
  owner: string = "patternfly-extension-testing",
  rej: () => void
) {
  const res = await octokit.request("GET /repos/{owner}/{repo}/actions/runs", {
    owner,
    repo,
    headers: {
      "X-GitHub-Api-Version": "2022-11-28",
    },
  });

  if (res.status !== 200) {
    rej();
  }

  const bumpRun = res.data.workflow_runs.find(run => (run.pull_requests[0].number as number) === PRNumber)
  return bumpRun.status;
}

async function foo() {
  const rejectedPromise = () => console.log("Promise rejected");

  const repos = await getRepos(rejectedPromise);

  repos.forEach(async repo => {
    const bumpPR = await getBumpPR(repo.name, rejectedPromise);

    const { name, number } = bumpPR;
    const workflow = await getWorkflowResult(number, name, "patternfly-extension-testing", rejectedPromise);
    console.log(workflow);
  })
}

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  useEffect(() => {
    foo();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>
            Get started by editing&nbsp;
            <code className={styles.code}>src/pages/index.tsx</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{" "}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/next.svg"
            alt="Next.js Logo"
            width={180}
            height={37}
            priority
          />
          <div className={styles.thirteen}>
            <Image
              src="/thirteen.svg"
              alt="13"
              width={40}
              height={31}
              priority
            />
          </div>
        </div>

        <div className={styles.grid}>
          <a
            href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Docs <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Find in-depth information about Next.js features and&nbsp;API.
            </p>
          </a>

          <a
            href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Learn <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Learn about Next.js in an interactive course with&nbsp;quizzes!
            </p>
          </a>

          <a
            href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Templates <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Discover and deploy boilerplate example Next.js&nbsp;projects.
            </p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
            target="_blank"
            rel="noopener noreferrer"
          >
            <h2 className={inter.className}>
              Deploy <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Instantly deploy your Next.js site to a shareable URL
              with&nbsp;Vercel.
            </p>
          </a>
        </div>
      </main>
    </>
  );
}
